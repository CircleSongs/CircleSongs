'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var FormatterBase = function () {
  function FormatterBase() {
    _classCallCheck(this, FormatterBase);

    this.stringOutput = '';
  }

  _createClass(FormatterBase, [{
    key: 'output',
    value: function output(str) {
      this.stringOutput += str;
    }
  }, {
    key: 'format',
    value: function format(song) {
      var _this = this;

      this.outputMetaData(song);
      this.startOfSong();

      song.lines.forEach(function (line) {
        _this.newLine();

        if (line.items.length > 0) {
          line.items.forEach(function (item) {
            _this.outputItem(item);
          });
        } else {
          _this.emptyLine();
        }
      });

      this.endOfSong();
      return this.stringOutput;
    }
  }, {
    key: 'emptyLine',
    value: function emptyLine() {}
  }, {
    key: 'outputMetaData',
    value: function outputMetaData() {}
  }, {
    key: 'startOfSong',
    value: function startOfSong() {}
  }, {
    key: 'endOfSong',
    value: function endOfSong() {}
  }]);

  return FormatterBase;
}();

exports.default = FormatterBase;