'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _runtime = require('handlebars/runtime');

var _runtime2 = _interopRequireDefault(_runtime);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _html_formatter = require('./html_formatter');

var _html_formatter2 = _interopRequireDefault(_html_formatter);

require('../handlebars_helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var template = _runtime2.default.template({
  "1": function _(container, depth0, helpers, partials, data, blockParams) {
    var stack1,
        alias1 = depth0 != null ? depth0 : container.nullContext || {};
    return ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.title : depth0, {
      "name": "if",
      "hash": {},
      "fn": container.program(2, data, 0, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams
    })) != null ? stack1 : "") + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.subtitle : depth0, {
      "name": "if",
      "hash": {},
      "fn": container.program(4, data, 0, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams
    })) != null ? stack1 : "") + "<div class=\"chord-sheet\">" + ((stack1 = helpers.each.call(alias1, depth0 != null ? depth0.bodyLines : depth0, {
      "name": "each",
      "hash": {},
      "fn": container.program(6, data, 1, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams
    })) != null ? stack1 : "") + "</div>";
  },
  "2": function _(container, depth0, helpers, partials, data) {
    var helper;
    return "<h1>" + container.escapeExpression((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
      "name": "title",
      "hash": {},
      "data": data
    }) : helper)) + "</h1>";
  },
  "4": function _(container, depth0, helpers, partials, data) {
    var helper;
    return "<h2>" + container.escapeExpression((helper = (helper = helpers.subtitle || (depth0 != null ? depth0.subtitle : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
      "name": "subtitle",
      "hash": {},
      "data": data
    }) : helper)) + "</h2>";
  },
  "6": function _(container, depth0, helpers, partials, data, blockParams) {
    var stack1,
        alias1 = depth0 != null ? depth0 : container.nullContext || {};
    return (stack1 = helpers["if"].call(alias1, (helpers.shouldRenderLine || depth0 && depth0.shouldRenderLine || helpers.helperMissing).call(alias1, blockParams[0][0], {
      "name": "shouldRenderLine",
      "hash": {},
      "data": data,
      "blockParams": blockParams
    }), {
      "name": "if",
      "hash": {},
      "fn": container.program(7, data, 0, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams
    })) != null ? stack1 : "";
  },
  "7": function _(container, depth0, helpers, partials, data, blockParams) {
    var stack1,
        alias1 = depth0 != null ? depth0 : container.nullContext || {};
    return "<div class=\"" + container.escapeExpression((helpers.lineClasses || depth0 && depth0.lineClasses || helpers.helperMissing).call(alias1, blockParams[1][0], {
      "name": "lineClasses",
      "hash": {},
      "data": data,
      "blockParams": blockParams
    })) + "\">" + ((stack1 = helpers.each.call(alias1, depth0 != null ? depth0.items : depth0, {
      "name": "each",
      "hash": {},
      "fn": container.program(8, data, 1, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams
    })) != null ? stack1 : "") + "</div>";
  },
  "8": function _(container, depth0, helpers, partials, data, blockParams) {
    var stack1,
        alias1 = depth0 != null ? depth0 : container.nullContext || {},
        alias2 = helpers.helperMissing;
    return ((stack1 = helpers["if"].call(alias1, (helpers.isChordLyricsPair || depth0 && depth0.isChordLyricsPair || alias2).call(alias1, blockParams[0][0], {
      "name": "isChordLyricsPair",
      "hash": {},
      "data": data,
      "blockParams": blockParams
    }), {
      "name": "if",
      "hash": {},
      "fn": container.program(9, data, 0, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams
    })) != null ? stack1 : "") + ((stack1 = helpers["if"].call(alias1, (helpers.isTag || depth0 && depth0.isTag || alias2).call(alias1, blockParams[0][0], {
      "name": "isTag",
      "hash": {},
      "data": data,
      "blockParams": blockParams
    }), {
      "name": "if",
      "hash": {},
      "fn": container.program(11, data, 0, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams
    })) != null ? stack1 : "");
  },
  "9": function _(container, depth0, helpers, partials, data) {
    var helper,
        alias1 = depth0 != null ? depth0 : container.nullContext || {},
        alias2 = helpers.helperMissing,
        alias3 = "function",
        alias4 = container.escapeExpression;
    return "<div class=\"column\"><div class=\"chord\">" + alias4((helper = (helper = helpers.chords || (depth0 != null ? depth0.chords : depth0)) != null ? helper : alias2, (typeof helper === 'undefined' ? 'undefined' : _typeof(helper)) === alias3 ? helper.call(alias1, {
      "name": "chords",
      "hash": {},
      "data": data
    }) : helper)) + "</div><div class=\"lyrics\">" + alias4((helper = (helper = helpers.lyrics || (depth0 != null ? depth0.lyrics : depth0)) != null ? helper : alias2, (typeof helper === 'undefined' ? 'undefined' : _typeof(helper)) === alias3 ? helper.call(alias1, {
      "name": "lyrics",
      "hash": {},
      "data": data
    }) : helper)) + "</div></div>";
  },
  "11": function _(container, depth0, helpers, partials, data, blockParams) {
    var stack1,
        alias1 = depth0 != null ? depth0 : container.nullContext || {};
    return (stack1 = helpers["if"].call(alias1, (helpers.isComment || depth0 && depth0.isComment || helpers.helperMissing).call(alias1, blockParams[1][0], {
      "name": "isComment",
      "hash": {},
      "data": data,
      "blockParams": blockParams
    }), {
      "name": "if",
      "hash": {},
      "fn": container.program(12, data, 0, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams
    })) != null ? stack1 : "";
  },
  "12": function _(container, depth0, helpers, partials, data) {
    var helper;
    return "<div class=\"comment\">" + container.escapeExpression((helper = (helper = helpers.value || (depth0 != null ? depth0.value : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
      "name": "value",
      "hash": {},
      "data": data
    }) : helper)) + "</div>";
  },
  "compiler": [7, ">= 4.0.0"],
  "main": function main(container, depth0, helpers, partials, data, blockParams) {
    var stack1;
    return (stack1 = helpers["with"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.song : depth0, {
      "name": "with",
      "hash": {},
      "fn": container.program(1, data, 0, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams
    })) != null ? stack1 : "";
  },
  "useData": true,
  "useBlockParams": true
});

var HtmlDivFormatter = function (_HtmlFormatter) {
  _inherits(HtmlDivFormatter, _HtmlFormatter);

  function HtmlDivFormatter() {
    _classCallCheck(this, HtmlDivFormatter);

    return _possibleConstructorReturn(this, (HtmlDivFormatter.__proto__ || Object.getPrototypeOf(HtmlDivFormatter)).apply(this, arguments));
  }

  _createClass(HtmlDivFormatter, [{
    key: 'format',
    value: function format(song) {
      return template({
        song: song,
        renderBlankLines: this.renderBlankLines
      });
    }
  }]);

  return HtmlDivFormatter;
}(_html_formatter2.default);

exports.default = HtmlDivFormatter;