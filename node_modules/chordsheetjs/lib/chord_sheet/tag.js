'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ALIASES;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var TITLE = exports.TITLE = 'title';
var SUBTITLE = exports.SUBTITLE = 'subtitle';
var COMMENT = exports.COMMENT = 'comment';
var START_OF_CHORUS = exports.START_OF_CHORUS = 'start_of_chorus';
var END_OF_CHORUS = exports.END_OF_CHORUS = 'end_of_chorus';
var START_OF_VERSE = exports.START_OF_VERSE = 'start_of_verse';
var END_OF_VERSE = exports.END_OF_VERSE = 'end_of_verse';

var TITLE_SHORT = 't';
var SUBTITLE_SHORT = 'st';
var COMMENT_SHORT = 'c';
var START_OF_CHORUS_SHORT = 'soc';
var END_OF_CHORUS_SHORT = 'eoc';

var META_TAGS = [TITLE, SUBTITLE];
var RENDERABLE_TAGS = [COMMENT];

var ALIASES = (_ALIASES = {}, _defineProperty(_ALIASES, TITLE_SHORT, TITLE), _defineProperty(_ALIASES, SUBTITLE_SHORT, SUBTITLE), _defineProperty(_ALIASES, COMMENT_SHORT, COMMENT), _defineProperty(_ALIASES, START_OF_CHORUS_SHORT, START_OF_CHORUS), _defineProperty(_ALIASES, END_OF_CHORUS_SHORT, END_OF_CHORUS), _ALIASES);

var TAG_REGEX = /^([^:\s]+)(:?\s*(.+))?$/;

var translateTagNameAlias = function translateTagNameAlias(name) {
  if (!name) {
    return name;
  }

  var sanitizedName = name.trim();

  if (sanitizedName in ALIASES) {
    return ALIASES[sanitizedName];
  }

  return sanitizedName;
};

var Tag = function () {
  function Tag(name, value) {
    _classCallCheck(this, Tag);

    this.name = name;
    this.value = value;
  }

  _createClass(Tag, [{
    key: 'hasValue',
    value: function hasValue() {
      return this.value !== null && this.value.trim().length > 0;
    }
  }, {
    key: 'isRenderable',
    value: function isRenderable() {
      return RENDERABLE_TAGS.indexOf(this.name) !== -1;
    }
  }, {
    key: 'isMetaTag',
    value: function isMetaTag() {
      return META_TAGS.indexOf(this.name) !== -1;
    }
  }, {
    key: 'clone',
    value: function clone() {
      return new Tag(this.name, this.value);
    }
  }, {
    key: 'toString',
    value: function toString() {
      return 'Tag(name=' + this.name + ', value=' + this.name + ')';
    }
  }, {
    key: 'name',
    set: function set(name) {
      this._name = translateTagNameAlias(name);
      this._originalName = name;
    },
    get: function get() {
      return this._name.trim();
    }
  }, {
    key: 'originalName',
    get: function get() {
      return this._originalName.trim();
    }
  }, {
    key: 'value',
    set: function set(value) {
      this._value = value;
    },
    get: function get() {
      if (this._value) {
        return this._value.trim();
      }

      return this._value || null;
    }
  }], [{
    key: 'parse',
    value: function parse(tag) {
      var matches = tag.match(TAG_REGEX);

      if (matches.length) {
        return new Tag(matches[1], matches[3] || null);
      }

      return null;
    }
  }]);

  return Tag;
}();

exports.default = Tag;