version: 2.1

orbs:
  heroku: circleci/heroku@2.0.0
  node: circleci/node@7.1.0
  ruby: circleci/ruby@2.5.0
  browser-tools: circleci/browser-tools@1.5.2

jobs:
  build:
    docker:
      - image: cimg/ruby:3.3.0-browsers
    resource_class: large
    steps:
      - checkout
      - run: node --version
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          command: |
            google-chrome --version
            chromedriver --version
          name: Check install
      - run:
          name: Install ImageMagic
          command: |
            sudo apt-get update
            sudo apt-get install build-essential
            sudo apt-get install imagemagick
  test:
    docker:
      - image: cimg/ruby:3.3.0-browsers
        environment:
          BUNDLE_JOBS: 3
          PGPASSWORD: ""
          BUNDLE_RETRY: 3
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: testuser
      - image: cimg/postgres:14.0
        environment:
          POSTGRES_USER: testuser
          POSTGRES_DB: circle_songs_test

    parallelism: 3
    steps:
      - checkout
      - ruby/install-deps
      - run:
          name: Install ImageMagic
          command: |
            sudo apt-get update
            sudo apt-get install build-essential
            sudo apt-get install imagemagick
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: Database Setup
          command: |
            bundle exec rake db:create
            bundle exec rake db:structure:load
      - ruby/rspec-test
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: tmp/capybara
  deploy:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git
      - run:
          command: |
            heroku run rails db:migrate -a ${HEROKU_APP_NAME}
            heroku restart -a ${HEROKU_APP_NAME}
          name: "Heroku post-deploy steps"

workflows:
  build-test-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: main
