---
version: 2.1
orbs:
  heroku: circleci/heroku@0.0.10
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build_and_test
      - deploy:
          requires:
            - build_and_test
jobs:
  build_and_test:
    working_directory: ~/circle-songs
    docker:
      - image: circleci/ruby:2.6.5-node-browsers
        environment:
          PGHOST: localhost
          PGUSER: circleci
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: circle-songs_test
          POSTGRES_PASSWORD: ""
      - image: redis
    steps:
      - checkout
      - run: sudo apt-get update
      - restore_cache:
          keys:
          - circle-songs-{{ checksum "Gemfile.lock" }}
          - circle-songs-
      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler
      - run:
          name: Install Dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
            bin/yarn
      - save_cache:
          paths:
            - ./vendor/bundle
          key: circle-songs-{{ checksum "Gemfile.lock" }}
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # test
      - run:
          name: Install JUnit coverage reporter
          command: yarn add --dev jest-junit
      - run:
          name: Run Javascript tests with JUnit as reporter
          command: npm test app/javascript --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: "/tmp/test-results/jest/results.xml"
      - run:
          name: run ruby tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings --timings-type=classname)"

             xvfb-run -a bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec/results.xml \
                            --format progress \
                            $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: /tmp/capybara
  deploy:
    executor: heroku/default # Uses the basic buildpack-deps image, which has the prerequisites for installing heroku's CLI.
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git:
          only-branch: master
      - run:
          name: Heroku post-deploy steps
          command: |
            heroku run rails db:migrate -a circle-songs
            heroku restart -a circle-songs
